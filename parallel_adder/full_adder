`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////

//Simple full adder using structural model

module full_adder(
    input A,B,E0,
    output E1,T
    );
    
//   A  : 1-bit input
//   B  : 1-bit input
//   E0 : 1-bit carry-in
//   E1 : 1-bit carry-out
//   T  : 1-bit sum
    
    
    wire w1,w2,w3;              // Internal wires to connect gates
    xor_gate xor1(A,B,w1);      // XOR for partial sum A ⊕ B
    and_gate and1(A,B,w2);      // AND for carry from A · B
    xor_gate xor2(w1,E0,T);     // XOR for final sum (A ⊕ B) ⊕ E0
    and_gate and2(w1,E0,w3);    // AND for carry from (A ⊕ B) · E0
    or_gate or1(w3,w2,E1);      // OR for final carry-out = (A·B) + ((A⊕B)·E0)
    
endmodule
